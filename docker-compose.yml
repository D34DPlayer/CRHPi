version: "3.6"

services:
  vnc:
    image: crhpi_vnc
    restart: always
    ports:
      - 127.0.0.1:5900:5900
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: 1.5G
  vaultwarden:
    image: vaultwarden/server:latest # with amd64 and armv7 you can use alpine
    restart: unless-stopped
    environment:
      DOMAIN: https://bw.${DOMAIN_NAME}
    env_file: 
      - .env
    volumes:
      - "./data/bw:/data"
  portfolio:
    build:
      context: ./portfolio
      args:
        - VUE_APP_DOMAIN_NAME=www.${DOMAIN_NAME}
    restart: unless-stopped
  dnscryptProxy:
    image: gists/dnscrypt-proxy
    networks:
      default:
        ipv4_address: 10.69.0.101
    volumes:
      - "./dnscrypt-proxy/dnscrypt-proxy.toml:/etc/dnscrypt-proxy/dnscrypt-proxy.toml:ro"
      - "./dnscrypt-proxy/blocked-names.txt:/etc/dnscrypt-proxy/blocked-names.txt:ro"
    restart: unless-stopped    
  bind:
    build: ./bind9
    networks:
      default:
        ipv4_address: 10.69.0.102
    ports:
      - 53:53/tcp
      - 53:53/udp
    restart: unless-stopped    
  openvpn:
    build: ./openvpn
    ports:
      - "1194:1194/udp"
    volumes:
      - "./data/openvpn:/data"
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    cap_add:
      - NET_ADMIN
    restart: unless-stopped    
  doh:
    image: satishweb/doh-server
    environment:
      UPSTREAM_DNS_SERVER: udp:bind:53
      DOH_HTTP_PREFIX: /dns-query
    restart: unless-stopped    
  dot:
    build: ./stunnel
    volumes:
      - "${CERTS_PATH}.key:/etc/stunnel/stunnel.key:ro"
      - "${CERTS_PATH}.crt:/etc/stunnel/stunnel.pem:ro"
    ports:
      - "853:853"
    environment:
      STUNNEL_SERVICE: dot
      STUNNEL_ACCEPT: 853
      STUNNEL_CONNECT: bind:53
    restart: unless-stopped    
  nextcloud-db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - nextcloud-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}

  nextcloud:
    build: ./nextcloud
    restart: always
    links:
      - db
    volumes:
      - /mnt/cloud:/var/www/html
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_HOST=nextcloud-db

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  api:
    build: ./Monochrome/api
    restart: always
    command: hypercorn api.main:app -b 0.0.0.0:3000 --root-path /api
    volumes:
      - /mnt/media:/media
    environment:
      DB_URL: postgresql+asyncpg://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      MEDIA_PATH: /media
    depends_on:
      - db
  web:
    build: ./Monochrome/web
    restart: always
    volumes:
    - /mnt/media:/srv/media
    - caddy_data:/data
    - ./Caddyfile:/etc/caddy/Caddyfile
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      MANGA_DOMAIN_NAME: ${MANGA_DOMAIN_NAME}
    ports:
      - 80:80
      - 443:443

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 10.69.0.0/24

volumes:
  caddy_data:
  postgres_data:
  nextcloud-db:
