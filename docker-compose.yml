version: "3.6"

services:
  vaultwarden:
    image: vaultwarden/server:latest # with amd64 and armv7 you can use alpine
    restart: unless-stopped
    environment:
      DOMAIN: https://bw.${DOMAIN_NAME}
    env_file: 
      - .env
    volumes:
      - "./data/bw:/data"
  
  portfolio:
    build:
      context: ./portfolio
      args:
        - DOMAIN_NAME=https://www.${DOMAIN_NAME}
    restart: unless-stopped
  
  dnscryptProxy:
    image: gists/dnscrypt-proxy:latest
    networks:
      default:
        ipv4_address: 10.69.0.101
    volumes:
      - "./dnscrypt-proxy/dnscrypt-proxy.toml:/etc/dnscrypt-proxy/dnscrypt-proxy.toml:ro"
      - "./dnscrypt-proxy/blocked-names.txt:/etc/dnscrypt-proxy/blocked-names.txt:ro"
    restart: unless-stopped    
  bind:
    build: ./bind9
    networks:
      default:
        ipv4_address: 10.69.0.102
    ports:
      - 53:53/tcp
      - 53:53/udp
    restart: unless-stopped    
  
  openvpn:
    build: ./openvpn
    ports:
      - "1194:1194/udp"
    volumes:
      - "./data/openvpn:/data"
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    cap_add:
      - NET_ADMIN
    restart: unless-stopped    
  
  doh:
    image: satishweb/doh-server:alpine
    environment:
      UPSTREAM_DNS_SERVER: udp:bind:53
      DOH_HTTP_PREFIX: /dns-query
    restart: unless-stopped    
  dot:
    build: ./stunnel
    volumes:
      - "${CERTS_PATH}.key:/etc/stunnel/stunnel.key:ro"
      - "${CERTS_PATH}.crt:/etc/stunnel/stunnel.pem:ro"
    ports:
      - "853:853"
    environment:
      STUNNEL_SERVICE: dot
      STUNNEL_ACCEPT: 853
      STUNNEL_CONNECT: bind:53
    restart: unless-stopped    

  nextcloud-db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - nextcloud-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
  nextcloud:
    build: ./nextcloud
    restart: always
    volumes:
      - /mnt/cloud:/var/www/html
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: nextcloud
      POSTGRES_USER: ${DB_USER}
      POSTGRES_HOST: nextcloud-db
      NEXTCLOUD_TRUSTED_DOMAINS: "cloud.${DOMAIN_NAME} cloud.${LOCAL_DOMAIN}"
    ports:
      - "3000:80"
  
  jellyfin:
    image: linuxserver/jellyfin:latest
    restart: always
    network_mode: "host"
    ports:
      - "8096:8096"
    volumes:
      - jellyfin-config:/config
      - jellyfin-cache:/cache
      - /mnt/Media:/media/nextcloud

  invidious-db:
    image: postgres:10-alpine
    restart: always
    volumes:
      - invidious-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
  invidious:
    image: quay.io/invidious/invidious:latest-arm64
    restart: always
    mem_limit: 1024M
    cpus: 0.5
    environment:
      INVIDIOUS_CONFIG: |
        channel_threads: 1
        check_tables: true
        feed_threads: 1
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: invidious-db
          port: 5432
        full_refresh: false
        https_only: true
        domain: yt.${DOMAIN_NAME}
        admins:
          - d34d
        admin_email: admin@d34d.one
        external_port: 443
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    depends_on:
      - invidious-db

  matrix:
    restart: always
    image: matrixconduit/matrix-conduit:latest
    volumes:
      - matrix-db:/var/lib/matrix-conduit
    ports:
      - 127.0.0.1:6167:6167
    healthcheck:
      disable: true
    environment:
      CONDUIT_SERVER_NAME: matrix.${DOMAIN_NAME}
      CONDUIT_DATABASE_BACKEND: rocksdb
      CONDUIT_DATABASE_PATH: /var/lib/matrix-conduit/
      CONDUIT_PORT: 6167
      CONDUIT_ADDRESS: 0.0.0.0
      CONDUIT_MAX_REQUEST_SIZE: 100_000_000
      CONDUIT_ALLOW_REGISTRATION: "true"
      CONDUIT_ALLOW_FEDERATION: "true"
      CONDUIT_TRUSTED_SERVERS: '["matrix.org"]'
      CONDUIT_CONFIG: ''
  matrix-web:
    image: vectorim/element-web:latest
    restart: always
    volumes:
      - ./element.json:/app/config.json

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    restart: always
    environment:
      - PUID=33
      - GUID=33
      - TZ=Europe/Brussels
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PWD}
      - PEERPORT=${TRANSMISSION_PEERPORT}
      - TRANSMISSION_WEB_HOME=/flood-for-transmission/
    volumes:
      - ./data/transmission:/config
      - /mnt/Torrents/Downloads:/downloads
      - /mnt/Torrents/Sources:/watch
    ports:
      - ${TRANSMISSION_PEERPORT}:${TRANSMISSION_PEERPORT}
      - ${TRANSMISSION_PEERPORT}:${TRANSMISSION_PEERPORT}/udp

  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  caddy:
    image: caddy:2
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./data/caddy_config:/config
      - ./data/caddy:/data
      - ./Caddyfile:/etc/caddy/Caddyfile
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      LOCAL_DOMAIN: ${LOCAL_DOMAIN}
    ports:
      - 80:80
      - 443:443

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 10.69.0.0/24

volumes:
  postgres_data:
  jellyfin-config:
  jellyfin-cache:
  nextcloud-db:
  invidious-db:
  matrix-db:
